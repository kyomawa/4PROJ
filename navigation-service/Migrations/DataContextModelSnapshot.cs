// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using navigation_service.Contexts;

#nullable disable

namespace navigation_service.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("navigation_service.Models.Itinerary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Arrival")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("ArrivalLat")
                        .HasColumnType("double");

                    b.Property<double>("ArrivalLon")
                        .HasColumnType("double");

                    b.Property<string>("Departure")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("DepartureLat")
                        .HasColumnType("double");

                    b.Property<double>("DepartureLon")
                        .HasColumnType("double");

                    b.Property<double>("Distance")
                        .HasColumnType("double");

                    b.Property<double>("Duration")
                        .HasColumnType("double");

                    b.Property<string>("TravelMode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserItineraryId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserItineraryId");

                    b.ToTable("Itinerary");
                });

            modelBuilder.Entity("navigation_service.Models.UserItinerary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("UserItinerary");
                });

            modelBuilder.Entity("navigation_service.Models.Itinerary", b =>
                {
                    b.HasOne("navigation_service.Models.UserItinerary", "UserItinerary")
                        .WithMany("Itineraries")
                        .HasForeignKey("UserItineraryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserItinerary");
                });

            modelBuilder.Entity("navigation_service.Models.UserItinerary", b =>
                {
                    b.Navigation("Itineraries");
                });
#pragma warning restore 612, 618
        }
    }
}
