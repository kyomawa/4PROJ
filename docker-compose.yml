services:
  navigation-service:
    build:
      context: ./navigation-service
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - OPEN_ROUTE_SERVICE_URL=${OPEN_ROUTE_SERVICE_URL}
      - OPEN_ROUTE_SERVICE_APIKEY=${OPEN_ROUTE_SERVICE_APIKEY}
      - GEOAPIFY_URL=${GEOAPIFY_URL}
      - GEOAPIFY_APIKEY=${GEOAPIFY_APIKEY}
    develop:
      watch:
        - action: rebuild
          path: ./navigation-service
    networks:
      - backend
  incident-service:
    build:
      context: ./incident-service
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    environment:
        OVERPASS_URL: ${OVERPASS_URL}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    develop:
      watch:
        - action: rebuild
          path: ./incident-service
    networks:
      - backend
  db-service:
    image: 'mysql:8.0'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3305:3306"
    networks:
      - backend
    volumes:
      - mysql:/var/lib/mysql
networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge
  database:
    driver: bridge
volumes: 
  mysql: