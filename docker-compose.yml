networks:
  4proj_dev:
    driver: bridge
services:
  traefik:
    image: traefik:v3.1
    restart: unless-stopped
    ports:
      - "${HOST_PORT_TRAEFIK}:80"
      - "${HOST_PORT_TRAEFIK_DASHBOARD}:8080"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.http.address=:80"
      - "--ping=true"
      - "--ping.entrypoint=http"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 25s
    networks:
      - 4proj_dev

  logto:
    image: "svhd/logto:${TAG-latest}"
    depends_on:
      logto-db-postgres:
        condition: service_healthy
    entrypoint:
      - sh
      - "-c"
      - "npm run cli db seed -- --swe && npm start"
    environment:
      - TRUST_PROXY_HEADER=true
      - "DB_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@logto-db-postgres:5432/${POSTGRES_DB:-logto}"
      - ENDPOINT=${LOGTO_ENDPOINT}
      - ADMIN_ENDPOINT=${LOGTO_ADMIN_ENDPOINT}
      - AUTHORITY_URL=http://admin.logto.localhost/
      - AUDIENCE=http://incident.localhost/
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=4proj_dev"
      - "traefik.http.services.logto-core-service.loadbalancer.server.port=3001"
      - "traefik.http.routers.logto-core.rule=Host(`logto.localhost`)"
      - "traefik.http.routers.logto-core.entrypoints=http"
      - "traefik.http.routers.logto-core.service=logto-core-service"
      - "traefik.http.services.logto-admin-service.loadbalancer.server.port=3002"
      - "traefik.http.routers.logto-admin.rule=Host(`admin.logto.localhost`)"
      - "traefik.http.routers.logto-admin.entrypoints=http"
      - "traefik.http.routers.logto-admin.service=logto-admin-service"
    healthcheck:
      test:
        - CMD-SHELL
        - "exit 0"
      interval: 5s
      timeout: 20s
      retries: 10
    extra_hosts:
      - "logto.localhost:host-gateway"
      - "admin.logto.localhost:host-gateway"
    networks:
      - 4proj_dev

  logto-db-postgres:
    image: "postgres:14-alpine"
    user: postgres
    environment:
      POSTGRES_USER: "${SERVICE_USER_POSTGRES}"
      POSTGRES_PASSWORD: "${SERVICE_PASSWORD_POSTGRES}"
      POSTGRES_DB: "${POSTGRES_DB:-logto}"
    volumes:
      - "logto-postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-U"
        - $SERVICE_USER_POSTGRES
        - "-d"
        - $POSTGRES_DB
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - 4proj_dev

  db-service:
    image: "mysql:8.0"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3305:3306"
    volumes:
      - 4proj-database:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - 4proj_dev

  navigation-service:
    build:
      context: ./navigation-service
      dockerfile: Dockerfile.dev
    environment:
      - TOMTOM_URL=${TOMTOM_URL}
      - TOMTOM_APIKEY=${TOMTOM_APIKEY}
      - GEOAPIFY_URL=${GEOAPIFY_URL}
      - GEOAPIFY_APIKEY=${GEOAPIFY_APIKEY}
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
    volumes:
      - ./navigation-service:/app
      - navigation-service-nuget:/root/.nuget/packages
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=4proj_4proj_dev"
      - "traefik.http.services.navigation-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.navigation-service.rule=Host(`navigation.localhost`)"
      - "traefik.http.routers.navigation-service.entrypoints=http"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - 4proj_dev

  incident-service:
    build:
      context: ./incident-service
      dockerfile: Dockerfile.dev
    depends_on:
      db-service:
        condition: service_healthy
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ASPNETCORE_ENVIRONMENT: Development
      DOTNET_WATCH_RESTART_ON_RUDE_EDIT: true
    volumes:
      - ./incident-service:/app
      - incident-service-nuget:/root/.nuget/packages
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=4proj_4proj_dev"
      - "traefik.http.services.incident-service.loadbalancer.server.port=8080"
      - "traefik.http.routers.incident-service.rule=Host(`incident.localhost`)"
      - "traefik.http.routers.incident-service.entrypoints=http"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/health || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - 4proj_dev

  mobile-app-service:
    build:
      context: ./mobile-app-service
      dockerfile: Dockerfile.dev
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: ./mobile-app-service
          target: /app
          ignore:
            - node_modules/
    ports:
      - "19000:19000" # Port principal d'Expo
      - "19001:19001" # Expo DevTools
      - "8081:8081" # Metro bundler HTTP
    environment:
      - EXPO_DEVTOOLS_LISTEN_ADDRESS=0.0.0.0
      - NODE_ENV=development
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://localhost:19000 || exit 0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - 4proj_dev

volumes:
  logto-postgres-data:
  4proj-database:
  navigation-service-nuget:
  incident-service-nuget:
