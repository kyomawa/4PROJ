networks:
  4proj_prod:
    driver: bridge
services:
  traefik:
    image: traefik:v3.1
    restart: unless-stopped
    ports:
      - "${HOST_PORT_TRAEFIK}:80"
      - "${HOST_PORT_TRAEFIK_DASHBOARD}:8080"
    command:
      - "--providers.docker=true"
      - "--entrypoints.http.address=:80"
      - "--ping=true"
      - "--ping.entrypoint=http"
      - "--api.dashboard=true"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.middlewares=traefik-auth"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=${DASHBOARD_USER}:${DASHBOARD_PASSWORD_HASH}"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - 4proj_prod

  logto:
    image: "svhd/logto:${TAG-latest}"
    depends_on:
      logto-db-postgres:
        condition: service_healthy
    entrypoint:
      - sh
      - "-c"
      - "npm run cli db seed -- --swe && npm start"
    environment:
      - TRUST_PROXY_HEADER=true
      - "DB_URL=postgres://${SERVICE_USER_POSTGRES}:${SERVICE_PASSWORD_POSTGRES}@logto-db-postgres:5432/${POSTGRES_DB:-logto}"
      - ENDPOINT=${LOGTO_ENDPOINT}
      - ADMIN_ENDPOINT=${LOGTO_ADMIN_ENDPOINT}
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=4proj_prod"

      - "traefik.http.services.logto-core-service.loadbalancer.server.port=3001"
      - "traefik.http.routers.logto-core.rule=Host(`logto.localhost`)"
      - "traefik.http.routers.logto-core.entrypoints=http"
      - "traefik.http.routers.logto-core.service=logto-core-service"

      - "traefik.http.services.logto-admin-service.loadbalancer.server.port=3002"
      - "traefik.http.routers.logto-admin.rule=Host(`admin.logto.localhost`)"
      - "traefik.http.routers.logto-admin.entrypoints=http"
      - "traefik.http.routers.logto-admin.service=logto-admin-service"
    healthcheck:
      test:
        - CMD-SHELL
        - "exit 0"
      interval: 5s
      timeout: 20s
      retries: 10
    extra_hosts:
      - "logto.localhost:host-gateway"
      - "admin.logto.localhost:host-gateway"
    networks:
      - 4proj_prod

  logto-db-postgres:
    image: "postgres:14-alpine"
    user: postgres
    environment:
      POSTGRES_USER: "${SERVICE_USER_POSTGRES}"
      POSTGRES_PASSWORD: "${SERVICE_PASSWORD_POSTGRES}"
      POSTGRES_DB: "${POSTGRES_DB:-logto}"
    volumes:
      - "logto-postgres-data:/var/lib/postgresql/data"
    healthcheck:
      test:
        - CMD
        - pg_isready
        - "-U"
        - $SERVICE_USER_POSTGRES
        - "-d"
        - $POSTGRES_DB
      interval: 5s
      timeout: 20s
      retries: 10
    networks:
      - 4proj_prod

volumes:
  logto-postgres-data:
